System.setProperty("file.encoding", "UTF-8")

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'

group = 'com.explicatis'
version = '0.2.3'

ext.vaadinVersion = '7.7.6'
ext.widgetSetName = 'com.explicatis.ext_token_field.WidgetSet'

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    gwt
    compile.exclude module: "hibernate-entitymanager"
}

dependencies {
    compile group: 'com.vaadin', name: 'vaadin-client', version: vaadinVersion
    compile group: 'com.vaadin', name: 'vaadin-themes', version: vaadinVersion
    compile group: 'com.vaadin', name: 'vaadin-server', version: vaadinVersion
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    gwt group: 'com.vaadin', name: 'vaadin-client-compiler', version: vaadinVersion
}

compileJava {
	options.encoding = 'UTF-8'
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}

jar {
    baseName 'ext-token-field'
    exclude 'rebel.xml'
    from (sourceSets.main.java.srcDirs) {
    	include '**/WidgetSet.gwt.xml'
    	include '**/public/**'
    	include '**/*.java'
    }
    manifest {
        attributes(
        	'Vaadin-Package-Version': '1',
            'Vaadin-Widgetsets': widgetSetName,
            'Implementation-Title': 'Extended Token Field',
            'Implementation-Version': version,
			'Vaadin-License-Title': 'Apache License 2.0',
            'Vaadin-License-File': 'http://www.apache.org/licenses/LICENSE-2.0.html'
        )
    }
}

task sourceJar (type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    include '**/*.java'
    exclude 'rebel.xml'
}

task fakeJar(type: Jar) {
	manifest {
	    attributes(
	        'Implementation-Title': 'Extended Token Field',
	        'Implementation-Version': version,
	        'Vaadin-Package-Version': '1',
	        'Vaadin-License-Title': 'Apache License 2.0',
	        'Vaadin-License-File': 'http://www.apache.org/licenses/LICENSE-2.0.html',
	        'Vaadin-Addon': "ext-token-field-${project.version}.jar"
	    )
    }
    fakeJar.manifest.writeTo("$buildDir/tmp/fakeJar/MANIFEST.MF")
}

task buildZip(type: Zip) {
    dependsOn fakeJar
	from jar
	from sourceJar
	into ('META-INF') {
	    from ("$buildDir/tmp/fakeJar")
		include 'MANIFEST.MF'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.3'
}
